name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

          token: ${{ secrets.GH_PAT }}

      - name: Setup
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: |
            - args: [--frozen-lockfile]

      - name: Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Check release
        id: release_check

        run: |
          echo "new_version=$(npx release-it --ci --dry-run --release-version || echo '')" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Perform release
        if: steps.release_check.outputs.new_version != ''
        run: |
          echo "New version detected: ${{ steps.release_check.outputs.new_version }}"
          npx release-it --ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker
        if: steps.release_check.outputs.new_version != ''
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: steps.release_check.outputs.new_version != ''
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        if: steps.release_check.outputs.new_version != ''
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ steps.release_check.outputs.new_version }}

      - name: Build and push
        if: steps.release_check.outputs.new_version != ''
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
